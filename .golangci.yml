# options for analysis running
run:
  # concurrency is a available CPU number
  concurrency: 2
  # timeout for analysis
  timeout: 2m
  # which dirs to skip: issues from them won't be reported
  # can use regexp here: generated.*, regexp is applied on full path
  skip-dirs:
    - vendor
    - third_party
    - testdata
    - examples
    - Godeps
    - builtin
    - internal/cache
  # Allow multiple parallel golangci-lint instances running
  allow-parallel-runners: true

# all available settings of specific linters
linters-settings:
  depguard:
  # list-type: blacklist
  # packages:
  #   # logging is allowed only by logutils, Zap
  #   # is allowed to use only in logutils package
  #   - go.uber.org/zap
  # packages-with-error-message:
  #   - go.uber.org/zap: "logging is allowed only by logutils"
  dogsled:
    # checks assignments with too many blank identifiers; default is 2
    max-blank-identifiers: 2
  dupl:
    # tokens count to trigger issue
    threshold: 100
  errcheck:
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`
    check-blank: true
    # report about not checking of errors in type assertions: `a := b.(MyStruct)`
    check-type-assertions: false
  funlen:
    lines: 120
    statements: 80
  goconst:
    # minimal length of string constant
    min-len: 2
    # minimal occurrences count to trigger
    min-occurrences: 2
  gocritic:
    # Enable multiple checks by tags, run `GL_DEBUG=gocritic golangci-lint run` to see all tags and checks
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      # - performance
      - style
    # Which checks should be disabled; can't be combined with 'enabled-checks'
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    # minimal code complexity to report
    min-complexity: 25
  goimports:
    # put imports beginning with prefix after 3rd-party packages
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    # minimal confidence for issues
    min-confidence: 0
  gomnd:
    settings:
      mnd:
        # the list of enabled checks, see https://github.com/tommy-muehle/go-mnd/#checks for description.
        checks: argument,case,condition,return
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 220
    # tab width in spaces
    tab-width: 0
  maligned:
    # print struct with more effective memory layout or not
    suggest-new: true
  misspell:
    # Correct spellings using locale preferences for US or UK
    locale: US
  nolintlint:
    # Disable to ensure that nolint directives don't have a leading space.
    # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-leading-space: true
    # Enable to ensure that nolint directives are all used.
    # report any unused nolint directives
    allow-unused: false
    # Enable to require an explanation of nonzero length after each nolint directive.
    # don't require an explanation for nolint directives
    require-explanation: false
    # Enable to require nolint directives to mention the specific linter being suppressed.
    # don't require nolint directives to be specific about which linter is being skipped
    require-specific: false

linters:
  # please, do not use `enable-all`
  disable-all: true
  enable:
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - golint
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    # - govet
    - ineffassign
    - interfacer
    - lll
    - megacheck
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - scopelint
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gomod
        - dupl
        - funlen
        - gosec
    - linters:
        - gocritic
      text: "unnecessaryDefer:"

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.28.x # use the fixed version to not introduce new linters unexpectedly
  prepare:
    - echo "here I can run custom commands, but no preparation needed for this repo"
